
Процедура ВставитьКартинкиВТекстHTML(ТекстHTML, Письмо) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Файлы.ИдентификаторПочтовогоВложения КАК ИдентификаторПочтовогоВложения,
		|	Файлы.Данные КАК Данные,
		|	Файлы.Тип КАК Тип
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.ВладелецФайла = &ВладелецФайла
		|	И Файлы.ИдентификаторПочтовогоВложения <> """"";
	
	Запрос.УстановитьПараметр("ВладелецФайла", Письмо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ИсточникФайла = Выборка.ИдентификаторПочтовогоВложения;
		
		ДанныеФайла = Base64Строка(Выборка.Данные.Получить());
		
		Если ЗначениеЗаполнено(ДанныеФайла) Тогда
			
			СтрокаИсточника = "data:image/" + Выборка.Тип + ";base64," + ДанныеФайла;
			
			ТекстHTML = СтрЗаменить(ТекстHTML, "cid:" + ИсточникФайла, СтрокаИсточника);
			ТекстHTML = СтрЗаменить(ТекстHTML, "CID:" + ИсточникФайла, СтрокаИсточника);
			
		Иначе
			
			СтрокаСИзображением = "<img src=""cid:" + ИсточникФайла + """>";
			
			ТекстHTML = СтрЗаменить(ТекстHTML, СтрокаСИзображением,
				"<a href=v8doc:fileID" + ИсточникФайла + ">" + СтрокаСИзображением + "</a>");
			
			СтрокаСИзображением = "<img src=""CID:" + ИсточникФайла + """>";
			
			ТекстHTML = СтрЗаменить(ТекстHTML, СтрокаСИзображением,
				"<a href=v8doc:fileID" + ИсточникФайла + ">" + СтрокаСИзображением + "</a>");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует тег style со стилем для встроенной почты. Прописываются стили для следующих элементов:
//  body - шрифт тела письма;
//  .v8doc-mail-header - шрифт заголовка письма;
//  .v8doc-mail-information - шрифт информации о письме;
//  .v8doc-mail-monospace - шрифт моноширинного письма;
//  blockquote - отображение цитат.
//
// Параметры:
//  ШрифтОтображения - Шрифт - Шрифт для отображения тела письма.
//  ОтображатьДругиеШрифты - Булево - Указание всех шрифтов письма.
//
// Возвращаемое значение:
//  Строка - Тег style с атрибутом class=v8doc-style и описанием стиля для встроенной почты.
//
Функция ПолучитьОписаниеСтиля(ШрифтОтображения = Неопределено)
	
	ОписаниеСтиля = "<style class=v8doc-style type=text/css>";
	
	ОписаниеСтиля = ОписаниеСтиля + Символы.ПС
		+ "*{
		|	font-family:%1 !important;
		|	font-size:%2pt !important;
		|}";
		
	ТекстСтиляBlockquote = 
		" border:none;
			|	border-left:solid #7eaae3 1.5pt;
			|	padding:0cm 0cm 0cm 4pt;
			|	margin:0cm;";
			
	ОписаниеСтиля = ОписаниеСтиля + Символы.ПС
		+ "blockquote{
			|" + ТекстСтиляBlockquote + "
			|}";
	ОписаниеСтиля = ОписаниеСтиля + Символы.ПС + "</style>";
	
	ИмяШрифта = """Arial""";
	
	ОписаниеСтиля = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеСтиля, ИмяШрифта, 12);
	
	ОписаниеСтиля = СтрЗаменить(ОписаниеСтиля, "font-size=", "font-size:");
	
	Возврат ОписаниеСтиля;
	
КонецФункции

Функция ПрименитьОтображениеHTMLДляМобильногоУстройства(ТекстHTML) Экспорт
	
	ТекстHTML = СтрЗаменить(ТекстHTML, "font-family=Arial", "font-family:Arial");
	
	Если (СтрНайти(ТекстHTML, "<head") = 0) Тогда 
		Возврат ТекстHTML;
	КонецЕсли;
	
	Если (СтрНайти(ТекстHTML, "<meta name=""viewport"" content=""width=device-width,") <> 0) Тогда 
		Возврат ТекстHTML;
	КонецЕсли;
	
	ТмпТекстПисьма = ТекстHTML;
	ТекстДоОткрТэгаHead = Лев(ТекстHTML, СтрНайти(ТекстHTML, "<head") + СтрДлина("<head") - 1);
	ТмпТекстПисьма = Прав(ТмпТекстПисьма, СтрДлина(ТекстHTML) - СтрНайти(ТекстHTML, "<head") - СтрДлина("<head") + 1);
	ТекстДоЗакрТэгаHead = Лев(ТмпТекстПисьма, СтрНайти(ТмпТекстПисьма, ">"));
	ТмпТекстПисьма = Прав(ТмпТекстПисьма, СтрДлина(ТмпТекстПисьма) - СтрНайти(ТмпТекстПисьма, ">"));
	
	ТекстHTML = ТекстДоОткрТэгаHead + ТекстДоЗакрТэгаHead + 
		"<meta name=""viewport"" content=""viewport-fit=cover, width=device-width, initial-scale=1"" />" 
		+ ТмпТекстПисьма;
		
КонецФункции
